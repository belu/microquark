[
{
  "name":"boolean",
  "allDeclaredMethods":true
},
{
  "name":"boolean[]",
  "allDeclaredMethods":true
},
{
  "name":"byte",
  "allDeclaredMethods":true
},
{
  "name":"byte[]",
  "allDeclaredMethods":true
},
{
  "name":"char",
  "allDeclaredMethods":true
},
{
  "name":"char[]",
  "allDeclaredMethods":true
},
{
  "name":"com.arjuna.ats.arjuna.common.CoordinatorEnvironmentBean",
  "allDeclaredFields":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getCheckedActionFactory","parameterTypes":[] }, 
    {"name":"getCheckedActionFactoryClassName","parameterTypes":[] }, 
    {"name":"getCommunicationStore","parameterTypes":[] }, 
    {"name":"getDefaultTimeout","parameterTypes":[] }, 
    {"name":"getDynamic1PC","parameterTypes":[] }, 
    {"name":"getMaxTwoPhaseCommitThreads","parameterTypes":[] }, 
    {"name":"getTxReaperCancelFailWaitPeriod","parameterTypes":[] }, 
    {"name":"getTxReaperCancelWaitPeriod","parameterTypes":[] }, 
    {"name":"getTxReaperMode","parameterTypes":[] }, 
    {"name":"getTxReaperTimeout","parameterTypes":[] }, 
    {"name":"getTxReaperZombieMax","parameterTypes":[] }, 
    {"name":"isAllowCheckedActionFactoryOverride","parameterTypes":[] }, 
    {"name":"isAlternativeRecordOrdering","parameterTypes":[] }, 
    {"name":"isAsyncAfterSynchronization","parameterTypes":[] }, 
    {"name":"isAsyncBeforeSynchronization","parameterTypes":[] }, 
    {"name":"isAsyncCommit","parameterTypes":[] }, 
    {"name":"isAsyncPrepare","parameterTypes":[] }, 
    {"name":"isAsyncRollback","parameterTypes":[] }, 
    {"name":"isBeforeCompletionWhenRollbackOnly","parameterTypes":[] }, 
    {"name":"isClassicPrepare","parameterTypes":[] }, 
    {"name":"isCommitOnePhase","parameterTypes":[] }, 
    {"name":"isEnableStatistics","parameterTypes":[] }, 
    {"name":"isFinalizeBasicActions","parameterTypes":[] }, 
    {"name":"isMaintainHeuristics","parameterTypes":[] }, 
    {"name":"isReadonlyOptimisation","parameterTypes":[] }, 
    {"name":"isSharedTransactionLog","parameterTypes":[] }, 
    {"name":"isStartDisabled","parameterTypes":[] }, 
    {"name":"isTransactionStatusManagerEnable","parameterTypes":[] }, 
    {"name":"isWriteOptimisation","parameterTypes":[] }, 
    {"name":"setAllowCheckedActionFactoryOverride","parameterTypes":["boolean"] }, 
    {"name":"setAlternativeRecordOrdering","parameterTypes":["boolean"] }, 
    {"name":"setAsyncAfterSynchronization","parameterTypes":["boolean"] }, 
    {"name":"setAsyncBeforeSynchronization","parameterTypes":["boolean"] }, 
    {"name":"setAsyncCommit","parameterTypes":["boolean"] }, 
    {"name":"setAsyncPrepare","parameterTypes":["boolean"] }, 
    {"name":"setAsyncRollback","parameterTypes":["boolean"] }, 
    {"name":"setBeforeCompletionWhenRollbackOnly","parameterTypes":["boolean"] }, 
    {"name":"setCheckedActionFactory","parameterTypes":["com.arjuna.ats.arjuna.coordinator.CheckedActionFactory"] }, 
    {"name":"setCheckedActionFactoryClassName","parameterTypes":["java.lang.String"] }, 
    {"name":"setClassicPrepare","parameterTypes":["boolean"] }, 
    {"name":"setCommitOnePhase","parameterTypes":["boolean"] }, 
    {"name":"setCommunicationStore","parameterTypes":["java.lang.String"] }, 
    {"name":"setDefaultTimeout","parameterTypes":["int"] }, 
    {"name":"setDynamic1PC","parameterTypes":["boolean"] }, 
    {"name":"setEnableStatistics","parameterTypes":["boolean"] }, 
    {"name":"setFinalizeBasicActions","parameterTypes":["boolean"] }, 
    {"name":"setMaintainHeuristics","parameterTypes":["boolean"] }, 
    {"name":"setMaxTwoPhaseCommitThreads","parameterTypes":["int"] }, 
    {"name":"setReadonlyOptimisation","parameterTypes":["boolean"] }, 
    {"name":"setSharedTransactionLog","parameterTypes":["boolean"] }, 
    {"name":"setStartDisabled","parameterTypes":["boolean"] }, 
    {"name":"setTransactionStatusManagerEnable","parameterTypes":["boolean"] }, 
    {"name":"setTxReaperCancelFailWaitPeriod","parameterTypes":["long"] }, 
    {"name":"setTxReaperCancelWaitPeriod","parameterTypes":["long"] }, 
    {"name":"setTxReaperMode","parameterTypes":["java.lang.String"] }, 
    {"name":"setTxReaperTimeout","parameterTypes":["long"] }, 
    {"name":"setTxReaperZombieMax","parameterTypes":["int"] }, 
    {"name":"setWriteOptimisation","parameterTypes":["boolean"] }
  ]
},
{
  "name":"com.arjuna.ats.arjuna.common.CoreEnvironmentBean",
  "allDeclaredFields":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getNodeIdentifier","parameterTypes":[] }, 
    {"name":"getPid","parameterTypes":[] }, 
    {"name":"getProcessImplementation","parameterTypes":[] }, 
    {"name":"getProcessImplementationClassName","parameterTypes":[] }, 
    {"name":"getSocketProcessIdMaxPorts","parameterTypes":[] }, 
    {"name":"getSocketProcessIdPort","parameterTypes":[] }, 
    {"name":"getTimeoutFactor","parameterTypes":[] }, 
    {"name":"getVarDir","parameterTypes":[] }, 
    {"name":"isAllowMultipleLastResources","parameterTypes":[] }, 
    {"name":"isDisableMultipleLastResourcesWarning","parameterTypes":[] }, 
    {"name":"setAllowMultipleLastResources","parameterTypes":["boolean"] }, 
    {"name":"setDisableMultipleLastResourcesWarning","parameterTypes":["boolean"] }, 
    {"name":"setNodeIdentifier","parameterTypes":["java.lang.String"] }, 
    {"name":"setPid","parameterTypes":["int"] }, 
    {"name":"setProcessImplementation","parameterTypes":["com.arjuna.ats.arjuna.utils.Process"] }, 
    {"name":"setProcessImplementationClassName","parameterTypes":["java.lang.String"] }, 
    {"name":"setSocketProcessIdMaxPorts","parameterTypes":["int"] }, 
    {"name":"setSocketProcessIdPort","parameterTypes":["int"] }, 
    {"name":"setTimeoutFactor","parameterTypes":["int"] }, 
    {"name":"setVarDir","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"com.arjuna.ats.arjuna.common.MetaObjectStoreEnvironmentBean",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.arjuna.ats.arjuna.common.ObjectStoreEnvironmentBean",
  "allDeclaredFields":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"getCacheStoreHash","parameterTypes":[] }, 
    {"name":"getCacheStoreRemovedItems","parameterTypes":[] }, 
    {"name":"getCacheStoreScanPeriod","parameterTypes":[] }, 
    {"name":"getCacheStoreSize","parameterTypes":[] }, 
    {"name":"getCacheStoreWorkItems","parameterTypes":[] }, 
    {"name":"getCreateTable","parameterTypes":[] }, 
    {"name":"getDropTable","parameterTypes":[] }, 
    {"name":"getExposeAllLogRecordsAsMBeans","parameterTypes":[] }, 
    {"name":"getHashedDirectories","parameterTypes":[] }, 
    {"name":"getHierarchyRetry","parameterTypes":[] }, 
    {"name":"getHierarchyTimeout","parameterTypes":[] }, 
    {"name":"getJdbcAccess","parameterTypes":[] }, 
    {"name":"getLocalOSRoot","parameterTypes":[] }, 
    {"name":"getObjectStoreDir","parameterTypes":[] }, 
    {"name":"getObjectStoreType","parameterTypes":[] }, 
    {"name":"getPurgeTime","parameterTypes":[] }, 
    {"name":"getShare","parameterTypes":[] }, 
    {"name":"getTablePrefix","parameterTypes":[] }, 
    {"name":"getTxLogSize","parameterTypes":[] }, 
    {"name":"isCacheStoreSync","parameterTypes":[] }, 
    {"name":"isIgnoreMBeanHeuristics","parameterTypes":[] }, 
    {"name":"isObjectStoreSync","parameterTypes":[] }, 
    {"name":"isScanZeroLengthFiles","parameterTypes":[] }, 
    {"name":"isSynchronousRemoval","parameterTypes":[] }, 
    {"name":"isTransactionSync","parameterTypes":[] }, 
    {"name":"isVolatileStoreSupportAllObjUids","parameterTypes":[] }, 
    {"name":"setCacheStoreHash","parameterTypes":["int"] }, 
    {"name":"setCacheStoreRemovedItems","parameterTypes":["int"] }, 
    {"name":"setCacheStoreScanPeriod","parameterTypes":["int"] }, 
    {"name":"setCacheStoreSize","parameterTypes":["int"] }, 
    {"name":"setCacheStoreSync","parameterTypes":["boolean"] }, 
    {"name":"setCacheStoreWorkItems","parameterTypes":["int"] }, 
    {"name":"setCreateTable","parameterTypes":["boolean"] }, 
    {"name":"setDropTable","parameterTypes":["boolean"] }, 
    {"name":"setExposeAllLogRecordsAsMBeans","parameterTypes":["boolean"] }, 
    {"name":"setHashedDirectories","parameterTypes":["int"] }, 
    {"name":"setHierarchyRetry","parameterTypes":["int"] }, 
    {"name":"setHierarchyTimeout","parameterTypes":["int"] }, 
    {"name":"setIgnoreMBeanHeuristics","parameterTypes":["boolean"] }, 
    {"name":"setJdbcAccess","parameterTypes":["java.lang.String"] }, 
    {"name":"setLocalOSRoot","parameterTypes":["java.lang.String"] }, 
    {"name":"setObjectStoreDir","parameterTypes":["java.lang.String"] }, 
    {"name":"setObjectStoreSync","parameterTypes":["boolean"] }, 
    {"name":"setObjectStoreType","parameterTypes":["java.lang.String"] }, 
    {"name":"setPurgeTime","parameterTypes":["long"] }, 
    {"name":"setScanZeroLengthFiles","parameterTypes":["boolean"] }, 
    {"name":"setShare","parameterTypes":["int"] }, 
    {"name":"setSynchronousRemoval","parameterTypes":["boolean"] }, 
    {"name":"setTablePrefix","parameterTypes":["java.lang.String"] }, 
    {"name":"setTransactionSync","parameterTypes":["boolean"] }, 
    {"name":"setTxLogSize","parameterTypes":["long"] }, 
    {"name":"setVolatileStoreSupportAllObjUids","parameterTypes":["boolean"] }
  ]
},
{
  "name":"com.arjuna.ats.jta.resources.LastResourceCommitOptimisation"
},
{
  "name":"com.arjuna.common.util.propertyservice.PropertiesFactory",
  "fields":[{"name":"delegatePropertiesFactory"}]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.melonbase.microquark.repo.data.Canton",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "fields":[{"name":"inhabitants", "allowUnsafeAccess":true}]
},
{
  "name":"com.melonbase.microquark.repo.data.DataRoot",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "fields":[
    {"name":"elections", "allowUnsafeAccess":true}, 
    {"name":"volksabstimmungen", "allowUnsafeAccess":true}
  ]
},
{
  "name":"com.melonbase.microquark.repo.data.Volksabstimmung",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "fields":[
    {"name":"datum", "allowUnsafeAccess":true}, 
    {"name":"id", "allowUnsafeAccess":true}, 
    {"name":"vorlagen", "allowUnsafeAccess":true}
  ]
},
{
  "name":"com.melonbase.microquark.repo.data.Vorlage",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "fields":[
    {"name":"beschreibung", "allowUnsafeAccess":true}, 
    {"name":"id", "allowUnsafeAccess":true}, 
    {"name":"stimmbeteiligung", "allowUnsafeAccess":true}
  ]
},
{
  "name":"com.melonbase.microquark.rest.dto.VolksabstimmungDto",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.melonbase.microquark.rest.dto.VolksabstimmungWithIdDto",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.melonbase.microquark.rest.dto.VorlageDto",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.melonbase.microquark.rest.dto.VorlageWithIdDto",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.mongodb.WriteConcern",
  "allPublicFields":true
},
{
  "name":"double",
  "allDeclaredMethods":true
},
{
  "name":"double[]",
  "allDeclaredMethods":true
},
{
  "name":"float",
  "allDeclaredMethods":true
},
{
  "name":"float[]",
  "allDeclaredMethods":true
},
{
  "name":"int",
  "allDeclaredMethods":true
},
{
  "name":"int[]",
  "allDeclaredMethods":true
},
{
  "name":"io.agroal.pool.ConnectionHandler[]"
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$1"
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "allDeclaredMethods":true
},
{
  "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.channel.ChannelDuplexHandler",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.ChannelHandlerAdapter",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.channel.ChannelInitializer",
  "methods":[
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.handler.codec.ByteToMessageDecoder",
  "methods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.handler.codec.MessageToMessageEncoder",
  "methods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.http.HttpObjectDecoder",
  "methods":[{"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.handler.timeout.IdleStateHandler",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.util.ReferenceCountUtil",
  "allDeclaredMethods":true
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
},
{
  "name":"io.quarkus.agroal.runtime.JdbcDriver",
  "allDeclaredMethods":true
},
{
  "name":"io.quarkus.runner.ApplicationImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.vertx.core.http.impl.Http1xOrH2CHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.vertx.core.http.impl.Http1xUpgradeToH2CHandler",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.vertx.core.http.impl.HttpServerChannelInitializer$1",
  "methods":[
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.vertx.core.http.impl.HttpServerImpl$1"
},
{
  "name":"io.vertx.core.http.impl.VertxHttpRequestDecoder"
},
{
  "name":"io.vertx.core.http.impl.VertxHttpResponseEncoder"
},
{
  "name":"io.vertx.core.net.impl.VertxHandler",
  "methods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"java.io.File",
  "allDeclaredMethods":true
},
{
  "name":"java.io.Serializable",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Boolean",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Byte",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Character",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Class",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Comparable",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Double",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Enum",
  "allDeclaredFields":true,
  "fields":[
    {"name":"name", "allowUnsafeAccess":true}, 
    {"name":"ordinal", "allowUnsafeAccess":true}
  ]
},
{
  "name":"java.lang.Float",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Integer",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Long",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Number",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Object",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Object[]",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.ProcessHandle",
  "methods":[
    {"name":"current","parameterTypes":[] }, 
    {"name":"pid","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.Short",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.String",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.StringBuffer",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.StringBuilder",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.String[]"
},
{
  "name":"java.lang.Thread",
  "fields":[
    {"name":"contextClassLoader", "allowUnsafeAccess":true}, 
    {"name":"inheritableThreadLocals", "allowUnsafeAccess":true}, 
    {"name":"threadLocals", "allowUnsafeAccess":true}
  ]
},
{
  "name":"java.lang.Void",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "methods":[
    {"name":"getInputArguments","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.ref.WeakReference[]"
},
{
  "name":"java.lang.reflect.Field[]"
},
{
  "name":"java.math.BigDecimal",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.math.BigDecimal[]"
},
{
  "name":"java.math.BigInteger",
  "allDeclaredMethods":true
},
{
  "name":"java.net.Inet4Address",
  "allDeclaredMethods":true
},
{
  "name":"java.net.Inet6Address",
  "allDeclaredMethods":true
},
{
  "name":"java.net.InetAddress",
  "allDeclaredMethods":true
},
{
  "name":"java.net.InetSocketAddress",
  "allDeclaredMethods":true
},
{
  "name":"java.net.Socket",
  "methods":[{"name":"setOption","parameterTypes":["java.net.SocketOption","java.lang.Object"] }]
},
{
  "name":"java.net.URI",
  "allDeclaredMethods":true
},
{
  "name":"java.net.URL",
  "allDeclaredMethods":true
},
{
  "name":"java.nio.Bits",
  "fields":[{"name":"UNALIGNED"}]
},
{
  "name":"java.nio.Buffer",
  "allDeclaredFields":true,
  "fields":[{"name":"address", "allowUnsafeAccess":true}]
},
{
  "name":"java.nio.DirectByteBuffer",
  "allDeclaredFields":true,
  "fields":[{"name":"cleaner", "allowUnsafeAccess":true}],
  "methods":[{"name":"<init>","parameterTypes":["long","int"] }]
},
{
  "name":"java.nio.file.OpenOption[]"
},
{
  "name":"java.nio.file.Path",
  "allDeclaredMethods":true
},
{
  "name":"java.security.MessageDigestSpi"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.sql.Date",
  "allDeclaredMethods":true
},
{
  "name":"java.sql.Time",
  "allDeclaredMethods":true
},
{
  "name":"java.sql.Timestamp",
  "allDeclaredMethods":true
},
{
  "name":"java.time.Instant"
},
{
  "name":"java.time.LocalDate",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "fields":[
    {"name":"day", "allowUnsafeAccess":true}, 
    {"name":"month", "allowUnsafeAccess":true}, 
    {"name":"year", "allowUnsafeAccess":true}
  ]
},
{
  "name":"java.util.AbstractCollection",
  "allDeclaredFields":true
},
{
  "name":"java.util.AbstractList",
  "allDeclaredFields":true
},
{
  "name":"java.util.AbstractMap",
  "allDeclaredFields":true
},
{
  "name":"java.util.AbstractSet",
  "allDeclaredFields":true
},
{
  "name":"java.util.ArrayDeque",
  "allDeclaredMethods":true
},
{
  "name":"java.util.ArrayList",
  "allDeclaredMethods":true
},
{
  "name":"java.util.Collections$EmptyList",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"java.util.Collections$EmptyMap",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"java.util.Collections$EmptySet",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"java.util.Collections$ReverseComparator",
  "allDeclaredMethods":true
},
{
  "name":"java.util.Collections$UnmodifiableNavigableMap$EmptyNavigableMap",
  "allDeclaredMethods":true
},
{
  "name":"java.util.Collections$UnmodifiableNavigableSet$EmptyNavigableSet",
  "allDeclaredMethods":true
},
{
  "name":"java.util.Comparator"
},
{
  "name":"java.util.Comparators$NaturalOrderComparator",
  "allDeclaredMethods":true
},
{
  "name":"java.util.Currency",
  "allDeclaredMethods":true
},
{
  "name":"java.util.Date",
  "allDeclaredMethods":true
},
{
  "name":"java.util.EnumMap",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "fields":[{"name":"keyType", "allowUnsafeAccess":true}]
},
{
  "name":"java.util.HashMap",
  "allDeclaredMethods":true
},
{
  "name":"java.util.HashSet",
  "allDeclaredMethods":true
},
{
  "name":"java.util.Hashtable",
  "allDeclaredMethods":true
},
{
  "name":"java.util.IdentityHashMap",
  "allDeclaredMethods":true
},
{
  "name":"java.util.ImmutableCollections$AbstractImmutableCollection",
  "allDeclaredFields":true
},
{
  "name":"java.util.ImmutableCollections$AbstractImmutableList",
  "allDeclaredFields":true
},
{
  "name":"java.util.ImmutableCollections$List12",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "fields":[
    {"name":"e0", "allowUnsafeAccess":true}, 
    {"name":"e1", "allowUnsafeAccess":true}
  ]
},
{
  "name":"java.util.LinkedHashMap",
  "allDeclaredMethods":true
},
{
  "name":"java.util.LinkedHashSet",
  "allDeclaredMethods":true
},
{
  "name":"java.util.LinkedList",
  "allDeclaredMethods":true
},
{
  "name":"java.util.List",
  "allDeclaredMethods":true
},
{
  "name":"java.util.Locale",
  "allDeclaredMethods":true
},
{
  "name":"java.util.Map",
  "allDeclaredMethods":true
},
{
  "name":"java.util.Optional",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "fields":[{"name":"value", "allowUnsafeAccess":true}]
},
{
  "name":"java.util.OptionalDouble",
  "allDeclaredMethods":true
},
{
  "name":"java.util.OptionalInt",
  "allDeclaredMethods":true
},
{
  "name":"java.util.OptionalLong",
  "allDeclaredMethods":true
},
{
  "name":"java.util.PriorityQueue",
  "allDeclaredMethods":true
},
{
  "name":"java.util.Properties",
  "allDeclaredMethods":true
},
{
  "name":"java.util.Set",
  "allDeclaredMethods":true
},
{
  "name":"java.util.Stack",
  "allDeclaredMethods":true
},
{
  "name":"java.util.TreeMap",
  "allDeclaredMethods":true
},
{
  "name":"java.util.TreeSet",
  "allDeclaredMethods":true
},
{
  "name":"java.util.Vector",
  "allDeclaredMethods":true
},
{
  "name":"java.util.WeakHashMap",
  "allDeclaredMethods":true
},
{
  "name":"java.util.concurrent.ConcurrentHashMap",
  "allDeclaredMethods":true
},
{
  "name":"java.util.concurrent.ConcurrentLinkedDeque",
  "allDeclaredMethods":true
},
{
  "name":"java.util.concurrent.ConcurrentLinkedQueue",
  "allDeclaredMethods":true
},
{
  "name":"java.util.concurrent.ConcurrentSkipListMap",
  "allDeclaredMethods":true
},
{
  "name":"java.util.concurrent.ConcurrentSkipListSet",
  "allDeclaredMethods":true
},
{
  "name":"java.util.concurrent.CopyOnWriteArrayList",
  "allDeclaredMethods":true
},
{
  "name":"java.util.regex.Pattern",
  "allDeclaredMethods":true
},
{
  "name":"javax.enterprise.context.BeforeDestroyed",
  "allDeclaredMethods":true
},
{
  "name":"javax.enterprise.context.Destroyed",
  "allDeclaredMethods":true
},
{
  "name":"javax.enterprise.inject.Default",
  "allDeclaredMethods":true
},
{
  "name":"javax.net.ssl.SSLEngine",
  "methods":[{"name":"getApplicationProtocol","parameterTypes":[] }]
},
{
  "name":"javax.ws.rs.container.ContainerRequestFilter[]"
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"jdk.internal.ref.Cleaner",
  "allDeclaredFields":true,
  "fields":[{"name":"thunk", "allowUnsafeAccess":true}]
},
{
  "name":"jdk.net.ExtendedSocketOptions",
  "allDeclaredFields":true
},
{
  "name":"long",
  "allDeclaredMethods":true
},
{
  "name":"long[]",
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.afs.blobstore.BlobStoreReadableFile$Default[]"
},
{
  "name":"one.microstream.afs.nio.NioReadableFile$Default[]"
},
{
  "name":"one.microstream.afs.sql.SqlReadableFile$Default[]"
},
{
  "name":"one.microstream.collections.BulkList",
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.collections.ConstHashEnum",
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.collections.ConstHashTable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.collections.ConstHashTable$Keys"
},
{
  "name":"one.microstream.collections.ConstHashTable$Values"
},
{
  "name":"one.microstream.collections.ConstList",
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.collections.Empty",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.collections.EmptyTable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "fields":[
    {"name":"keys", "allowUnsafeAccess":true}, 
    {"name":"values", "allowUnsafeAccess":true}
  ]
},
{
  "name":"one.microstream.collections.EmptyTable$Keys",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "fields":[{"name":"this$0", "allowUnsafeAccess":true}]
},
{
  "name":"one.microstream.collections.EmptyTable$Values",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "fields":[{"name":"this$0", "allowUnsafeAccess":true}]
},
{
  "name":"one.microstream.collections.EqBulkList",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.collections.EqConstHashEnum",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.collections.EqConstHashTable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.collections.EqConstHashTable$Keys"
},
{
  "name":"one.microstream.collections.EqConstHashTable$Values"
},
{
  "name":"one.microstream.collections.EqHashEnum",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.collections.EqHashTable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.collections.EqHashTable$Keys"
},
{
  "name":"one.microstream.collections.EqHashTable$Values"
},
{
  "name":"one.microstream.collections.FixedList",
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.collections.HashEnum",
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.collections.HashTable",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.collections.HashTable$Keys"
},
{
  "name":"one.microstream.collections.HashTable$Values"
},
{
  "name":"one.microstream.collections.LimitList",
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.collections.Singleton",
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.hashing.HashEqualator"
},
{
  "name":"one.microstream.hashing.XHashing$SingletonIdentityHashEqualator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.hashing.XHashing$SingletonKeyValueIdentityHashEqualator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.hashing.XHashing$SingletonValueHashEqualator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.java.net.BinaryHandlerInetSocketAddress",
  "allDeclaredFields":true
},
{
  "name":"one.microstream.memory.sun.JdkInternals$ObjectHeaderSizeDummy",
  "allDeclaredFields":true,
  "fields":[{"name":"calculateByteSizeObjectHeaderFieldOffsetDummy", "allowUnsafeAccess":true}]
},
{
  "name":"one.microstream.persistence.binary.types.BinaryField[]"
},
{
  "name":"one.microstream.persistence.binary.types.BinaryReferenceTraverser[]"
},
{
  "name":"one.microstream.persistence.binary.types.LoadItemsChain$Entry[]"
},
{
  "name":"one.microstream.persistence.types.PersistenceRootReference$Default",
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.persistence.types.PersistenceRoots$Default",
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.persistence.types.PersistenceTypeDefinitionMemberFieldGeneric[]"
},
{
  "name":"one.microstream.persistence.types.PersistenceTypeDescription[]"
},
{
  "name":"one.microstream.reference.Lazy$Default",
  "allDeclaredMethods":true
},
{
  "name":"one.microstream.storage.types.StorageChannel$HousekeepingTask[]"
},
{
  "name":"one.microstream.util.Substituter$Default",
  "allDeclaredMethods":true
},
{
  "name":"org.jboss.resteasy.core.AcceptHeaderByFileSuffixFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.jboss.threads.EnhancedQueueExecutor",
  "fields":[
    {"name":"activeCount", "allowUnsafeAccess":true}, 
    {"name":"peakQueueSize", "allowUnsafeAccess":true}, 
    {"name":"peakThreadCount", "allowUnsafeAccess":true}, 
    {"name":"queueSize", "allowUnsafeAccess":true}, 
    {"name":"sequence"}, 
    {"name":"terminationWaiters", "allowUnsafeAccess":true}
  ]
},
{
  "name":"org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode",
  "fields":[
    {"name":"parked", "allowUnsafeAccess":true}, 
    {"name":"task", "allowUnsafeAccess":true}
  ]
},
{
  "name":"org.jboss.threads.EnhancedQueueExecutor$QNode",
  "fields":[{"name":"next", "allowUnsafeAccess":true}]
},
{
  "name":"org.jboss.threads.EnhancedQueueExecutorBase1",
  "fields":[{"name":"tail", "allowUnsafeAccess":true}]
},
{
  "name":"org.jboss.threads.EnhancedQueueExecutorBase3",
  "fields":[{"name":"head", "allowUnsafeAccess":true}]
},
{
  "name":"org.jboss.threads.EnhancedQueueExecutorBase5",
  "fields":[{"name":"threadStatus", "allowUnsafeAccess":true}]
},
{
  "name":"org.jboss.threads.Messages_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.mariadb.jdbc.Driver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mariadb.jdbc.util.Options",
  "fields":[
    {"name":"password"}, 
    {"name":"user"}
  ]
},
{
  "name":"org.postgresql.Driver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.postgresql.PGProperty",
  "fields":[
    {"name":"ALLOW_ENCODING_CHANGES"}, 
    {"name":"APPLICATION_NAME"}, 
    {"name":"ASSUME_MIN_SERVER_VERSION"}, 
    {"name":"AUTOSAVE"}, 
    {"name":"BINARY_TRANSFER"}, 
    {"name":"BINARY_TRANSFER_DISABLE"}, 
    {"name":"BINARY_TRANSFER_ENABLE"}, 
    {"name":"CANCEL_SIGNAL_TIMEOUT"}, 
    {"name":"CLEANUP_SAVEPOINTS"}, 
    {"name":"CONNECT_TIMEOUT"}, 
    {"name":"CURRENT_SCHEMA"}, 
    {"name":"DATABASE_METADATA_CACHE_FIELDS"}, 
    {"name":"DATABASE_METADATA_CACHE_FIELDS_MIB"}, 
    {"name":"DEFAULT_ROW_FETCH_SIZE"}, 
    {"name":"DISABLE_COLUMN_SANITISER"}, 
    {"name":"ESCAPE_SYNTAX_CALL_MODE"}, 
    {"name":"GSS_ENC_MODE"}, 
    {"name":"GSS_LIB"}, 
    {"name":"HIDE_UNPRIVILEGED_OBJECTS"}, 
    {"name":"HOST_RECHECK_SECONDS"}, 
    {"name":"JAAS_APPLICATION_NAME"}, 
    {"name":"JAAS_LOGIN"}, 
    {"name":"KERBEROS_SERVER_NAME"}, 
    {"name":"LOAD_BALANCE_HOSTS"}, 
    {"name":"LOGGER_FILE"}, 
    {"name":"LOGGER_LEVEL"}, 
    {"name":"LOGIN_TIMEOUT"}, 
    {"name":"LOG_SERVER_ERROR_DETAIL"}, 
    {"name":"LOG_UNCLOSED_CONNECTIONS"}, 
    {"name":"MAX_RESULT_BUFFER"}, 
    {"name":"OPTIONS"}, 
    {"name":"PASSWORD"}, 
    {"name":"PG_DBNAME"}, 
    {"name":"PG_HOST"}, 
    {"name":"PG_PORT"}, 
    {"name":"PREFER_QUERY_MODE"}, 
    {"name":"PREPARED_STATEMENT_CACHE_QUERIES"}, 
    {"name":"PREPARED_STATEMENT_CACHE_SIZE_MIB"}, 
    {"name":"PREPARE_THRESHOLD"}, 
    {"name":"PROTOCOL_VERSION"}, 
    {"name":"READ_ONLY"}, 
    {"name":"READ_ONLY_MODE"}, 
    {"name":"RECEIVE_BUFFER_SIZE"}, 
    {"name":"REPLICATION"}, 
    {"name":"REWRITE_BATCHED_INSERTS"}, 
    {"name":"SEND_BUFFER_SIZE"}, 
    {"name":"SOCKET_FACTORY"}, 
    {"name":"SOCKET_FACTORY_ARG"}, 
    {"name":"SOCKET_TIMEOUT"}, 
    {"name":"SSL"}, 
    {"name":"SSL_CERT"}, 
    {"name":"SSL_FACTORY"}, 
    {"name":"SSL_FACTORY_ARG"}, 
    {"name":"SSL_HOSTNAME_VERIFIER"}, 
    {"name":"SSL_KEY"}, 
    {"name":"SSL_MODE"}, 
    {"name":"SSL_PASSWORD"}, 
    {"name":"SSL_PASSWORD_CALLBACK"}, 
    {"name":"SSL_ROOT_CERT"}, 
    {"name":"SSPI_SERVICE_CLASS"}, 
    {"name":"STRING_TYPE"}, 
    {"name":"TARGET_SERVER_TYPE"}, 
    {"name":"TCP_KEEP_ALIVE"}, 
    {"name":"UNKNOWN_LENGTH"}, 
    {"name":"USER"}, 
    {"name":"USE_SPNEGO"}, 
    {"name":"XML_FACTORY_FACTORY"}
  ]
},
{
  "name":"org.slf4j.Logger"
},
{
  "name":"short",
  "allDeclaredMethods":true
},
{
  "name":"short[]",
  "allDeclaredMethods":true
},
{
  "name":"sun.misc.Unsafe",
  "fields":[{"name":"theUnsafe"}],
  "methods":[
    {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, 
    {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, 
    {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, 
    {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }
  ]
},
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[
    {"name":"publicSelectedKeys", "allowUnsafeAccess":true}, 
    {"name":"selectedKeys", "allowUnsafeAccess":true}
  ]
},
{
  "name":"sun.security.provider.MD5",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
}
]
